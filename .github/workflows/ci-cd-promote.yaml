name: CI/CD with Promotion

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (dev, qa, uat, prod)"
        required: true
        type: choice
        options:
          - dev
          - qa
          - uat
          - prod
      image_tag:
        description: "Image tag to deploy (required for qa/uat/prod)"
        required: false

jobs:
  build-test-sonar-docker-deploy:
    if: ${{ github.event.inputs.environment == 'dev' }}
    name: Build, Test, Scan, Push, and Deploy to Dev
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_SCANNER_OPTS: "-Dsonar.qualitygate.wait=true"

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=$(date +%s)" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/reshmasj/task:${{ env.IMAGE_TAG }} .

      - name: Push Docker image
        run: |
          docker push ghcr.io/reshmasj/task:${{ env.IMAGE_TAG }}

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Login to Azure AKS
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group myResourceGroup --name myAKSCluster --overwrite-existing

      - name: Deploy to Dev
        run: |
          echo "ENV_NAMESPACE=dev" >> $GITHUB_ENV
          envsubst < k8/deployment.yaml | kubectl apply -n dev -f -
          envsubst < k8/service.yaml | kubectl apply -n dev -f -
          kubectl set image deployment/nodejs-app nodejs-app=ghcr.io/reshmasj/task:$IMAGE_TAG -n dev

      - name: Output Dev Deployment Info
        run: |
          echo "Image $IMAGE_TAG deployed to DEV environment"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_STEP_SUMMARY

  promote:
    if: ${{ github.event.inputs.environment != 'dev' }}
    name: Promote to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }} # This enables manual approvals if protection rules are enabled

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate image_tag input
        run: |
          if [ -z "${{ github.event.inputs.image_tag }}" ]; then
            echo "ERROR: image_tag input is required for non-dev environments."
            exit 1
          fi

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV
        #run: echo "IMAGE_TAG=$(date +%s)" >> $GITHUB_ENV

      - name: Set ENV_NAMESPACE
        run: echo "ENV_NAMESPACE=${{ github.event.inputs.environment }}" >> $GITHUB_ENV

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Login to Azure AKS
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group myResourceGroup --name myAKSCluster --overwrite-existing

      - name: Deploy to Target Environment
        run: |
          envsubst < k8/deployment.yaml | kubectl apply -n $ENV_NAMESPACE -f -
          envsubst < k8/service.yaml | kubectl apply -n $ENV_NAMESPACE -f -
          kubectl set image deployment/nodejs-app nodejs-app=ghcr.io/reshmasj/task:$IMAGE_TAG -n $ENV_NAMESPACE

      - name: Output Promotion Info
        run: |
          echo "Image $IMAGE_TAG promoted to $ENV_NAMESPACE"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_STEP_SUMMARY
